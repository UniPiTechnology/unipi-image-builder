#
# For a description of the syntax of this configuration file,
# see the file Documentation/kbuild/kconfig-language.txt in the
# Linux kernel source tree.
#
mainmenu "Unipi Image Builder Configuration"

choice
	prompt "Debian Suite"
	default DEBIAN_SUITE_STABLE

config DEBIAN_SUITE_OLDOLDSTABLE
	depends on !EDGE
	bool "Use Debian oldoldstable release (buster)"

config DEBIAN_SUITE_OLDSTABLE
	depends on !EDGE
	bool "Use Debian oldstable release (bullseye)"

config DEBIAN_SUITE_STABLE
	bool "Use Debian stable release (bookworm)"

config DEBIAN_SUITE_TESTING
	bool "Use Debian testing release (trixie)"

config DEBIAN_SUITE_OTHER
	bool "Use othe specified release"

endchoice

config DEBIAN_SUITE
	string
	prompt "Choose Debian release" if DEBIAN_SUITE_OTHER
	default "buster" if DEBIAN_SUITE_OLDOLDSTABLE
	default "bullseye" if DEBIAN_SUITE_OLDSTABLE
	default "bookworm" if DEBIAN_SUITE_STABLE
	default "trixie" if DEBIAN_SUITE_TESTING
	help
	  Use some codename of Debian release which will  in apt source list.

choice
	prompt "Package selection"
	default VARIANT_APT
	help
	  All package sets also include the direct and indirect hard dependencies (but not recommends) of the selected package
	  sets. The variants minbase, buildd and -, resemble the package sets that debootstrap would install with the same
	  --variant argument. The release with a name matching the SUITE argument as well as the native architecture will be used
	  to determine the "Essential:yes" and priority values. To select packages with matching priority from any suite, specify
	  the empty string for SUITE. The default variant is debootstrap.

config VARIANT_EXTRACT
	bool "no Essential, extract only"
	help
	  Installs nothing by default (not even "Essential:yes" packages). Packages given by the "--include" option are
	  extracted but will not be installed.

config VARIANT_CUSTOM
	bool "no Essential"
	help
	  Installs nothing by default (not even "Essential:yes" packages). Packages given by the "--include" option will be
	  installed.  If another mode than chrootless was selected and dpkg was not part of the included package set, then
	  this variant will fail because it cannot configure the packages.

config VARIANT_ESSENTIAL
	bool "Essential"
	help
	  "Essential:yes" packages.

config VARIANT_APT
	bool "Essential + apt"
	help
	  The essential set plus apt. This variant uses the fact that apt treats itself as essential and thus running
	  "apt-get dist-upgrade" without any packages installed will install the essential set plus apt. If you just want
	  essential and apt, then this variant is faster than using the essential variant and adding apt via "--include"
	  because all packages get installed at once. The downside of this variant is, that if it should happen that an
	  essential package is not installable, then it will just get ignored without throwing an error.

config VARIANT_REQUIRED
	bool "Required, minbase"
	help
	  The essential set plus all packages with Priority:required and apt.  It is roughly equivalent to running
	  mmdebstrap with --variant=essential --include="?priority(required)"

config VARIANT_BUILDD
	bool "Minbase + building"
	help
	  The minbase set plus build-essential.  It is roughly equivalent to running mmdebstrap with
	  --variant=essential --include="?priority(required),build-essential"

config VARIANT_IMPORTANT
	bool "Important, debootstrap"
	help
	  The required set plus all packages with Priority:important. This is the default of debootstrap. It is roughly
	  equivalent to running mmdebstrap with
	  --variant=essential --include="~prequired|~pimportant"

config VARIANT_STANDARD
	bool "Standard"
	help
	  The important set plus all packages with Priority:standard.  It is roughly equivalent to running mmdebstrap with
	  --variant=essential --include="~prequired|~pimportant|~pstandard"

endchoice

config BUILD_VARIANT
	string
	default "extract" if VARIANT_EXTRACT
	default "custom" if VARIANT_CUSTOM
	default "essential" if VARIANT_ESSENTIAL
	default "apt" if VARIANT_APT
	default "required" if VARIANT_REQUIRED
	default "buildd" if VARIANT_BUILDD
	default "important" if VARIANT_IMPORTANT
	default "standard" if VARIANT_STANDARD

menuconfig UNIPI_SOURCE
	bool "Configure Unipi platform"
	default y
	help
	  Select Yes if image is for Unipi products.
	  This add Unipi repository to apt source list to enable install
	  Unipi specific packages like kernel, bootloader, devicetree ...

source "unipi/Kconfig"

config UNKNOWN
	bool 
	default ! UNIPI_SOURCE

config ARCHITECTURE
	string
	prompt "Select architecture"
	depends on UNKNOWN
	help
	  Write target architecture like arm64, armhf, amd64...


source "scripts/Kconfig"

menu "Addons"
source "Kconfig.addons"
endmenu

menu "Cleaning actions"

config EXCLUDE_MAN_PAGES
	bool "Remove man pages from installable files"
	default "y"

config CLEAN_APT_LIST
	bool "Remove the package lists and apt cache"
	default y
	help
	  After building the image remove downloaded package lists and clean
	  apt cache. User can download lists later using apt-get update.

config CLEAN_MACHINE_ID
	bool "Remove unreproducible identificator like machine-id"
	default y
	help
	  After building the image remove files that make the result 
	  unreproducible write the empty string to /etc/machine-id, remove
	  ssh server keys.

endmenu

choice
	prompt "Output image format"
	default IMAGE_FORMAT_EXT4

config IMAGE_FORMAT_DIR
	bool "Build chroot directory only"

config IMAGE_FORMAT_TAR
	bool "Chroot directory stored as tarball"

config IMAGE_FORMAT_EXT4
	bool "Image formated as ext4 fs"

config IMAGE_FORMAT_EXT2
	bool "Image formated as ext2 fs"

config IMAGE_FORMAT_SWU
	bool "Image packed into SWupdate format"

endchoice

config IMAGE_FORMAT
	string
	default "dir" if IMAGE_FORMAT_DIR
	default "tar" if IMAGE_FORMAT_TAR
	default "tar" if IMAGE_FORMAT_EXT4
	default "tar" if IMAGE_FORMAT_EXT2
	default "tar" if IMAGE_FORMAT_SWU

